networks:
  foodgram-network:
    driver: bridge

services:
  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U foodgram_user -d foodgram"]
      interval: 5s
      retries: 5
      timeout: 3s
    networks:
      - foodgram-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - static:/backend_static
      - ./backend/media:/app/media
      - ./backend/data:/app/backend/data
    depends_on:
      db:
        condition: service_healthy
    networks:
      - foodgram-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: .env
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static:/frontend_static
    networks:
      - foodgram-network

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - backend
      - frontend
    ports:
      - 7777:80
    volumes:
      - static:/static
      - ./backend/media:/app/media
    networks:
      - foodgram-network

volumes:
  pg_data:
  static:
  media:
